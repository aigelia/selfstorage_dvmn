import os
from telegram.ext import Updater, CommandHandler, CallbackQueryHandler, MessageHandler, Filters
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Updater, CommandHandler, CallbackQueryHandler, MessageHandler, Filters
import handlers
from menu_constants import MAIN_MENU


HANDLER_MAP = {
    'to_menu': bot_utils.handle_back_to_menu,
    'main_menu': bot_utils.handle_main_menu,
    'show_storage_rules': bot_utils.handle_show_storage_rules,
    'order_storage': bot_utils.handle_order_storage,
    'retrieve_items': bot_utils.handle_retrieve_items,
}

def start(update, context):
    update.message.reply_text(
        '''SelfStorage –ø–æ–º–æ–∂–µ—Ç –≤–∞–º —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–æ, —á—Ç–æ –Ω–µ —É–º–µ—â–∞–µ—Ç—Å—è –¥–æ–º–∞!
        üß• –ó–∏–º–Ω–∏–µ –≤–µ—â–∏, –∫–æ–≥–¥–∞ –Ω–∞ –¥–≤–æ—Ä–µ –ª–µ—Ç–æ
        üõ∑ –°–Ω–æ—É–±–æ—Ä–¥, —à–∏–Ω—ã, –≤–µ–ª–æ—Å–∏–ø–µ–¥—ã
        üì¶ –í–µ—â–∏ –Ω–∞ –≤—Ä–µ–º—è –ø–µ—Ä–µ–µ–∑–¥–∞
        üë∂ –î–µ—Ç—Å–∫–∏–µ –≤–µ—â–∏ ¬´–Ω–∞ –ø–æ—Ç–æ–º¬ª
        üóÑ –î–æ–∫—É–º–µ–Ω—Ç—ã –∏ –∞—Ä—Ö–∏–≤—ã (–¥–ª—è –±–∏–∑–Ω–µ—Å–∞)
        üß≥ –í—Å—ë, —á—Ç–æ –∂–∞–ª–∫–æ –≤—ã–±—Ä–æ—Å–∏—Ç—å, –Ω–æ –Ω–µ–≥–¥–µ –¥–µ—Ä–∂–∞—Ç—å
        –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –≤–∞–º –ø—É–Ω–∫—Ç –º–µ–Ω—é:''',
        reply_markup=bot_utils.build_keyboard('main_menu', MAIN_MENU)
    )

def button_handler(update, context):
    query = update.callback_query
    query.answer()
    data = query.data.strip()
    
    handler = HANDLER_MAP.get(data)
    if handler:
        handler(update, context)  # –ü–µ—Ä–µ–¥–∞–µ–º —Ç–æ–ª—å–∫–æ update –∏ context
    else:
        query.edit_message_text('–í—ã–±–æ—Ä –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω, –Ω–∞–∂–º–∏—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞.')


def main():
    tg_token = '7988710995:AAHQXwvQbWwkIlqmYcu0EKsWVao_wAHgM6M'
    updater = Updater(tg_token, use_context=True)
    dp = updater.dispatcher
    dp.add_handler(CommandHandler('start', start))
    dp.add_handler(CallbackQueryHandler(button_handler))
    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
