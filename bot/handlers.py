from telegram import InlineKeyboardMarkup, InlineKeyboardButton

import getters
import menu_constants


def build_keyboard(action_type, button_rows):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–∏–ø –¥–µ–π—Å—Ç–≤–∏—è (–¥–ª—è callback_data) –∏ —Å–ø–∏—Å–æ–∫ —Å–ø–∏—Å–∫–æ–≤ —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –∫–Ω–æ–ø–æ–∫."""
    keyboard = [
        [InlineKeyboardButton(text=button_label, callback_data=f"{action_type}_{row_index}")]
        for row_index, [button_label] in enumerate(button_rows)
    ]
    return InlineKeyboardMarkup(keyboard)


def back_to_menu():
    """–°–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
    keyboard = [[InlineKeyboardButton(text='‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='to_menu')]]
    return InlineKeyboardMarkup(keyboard)


def handle_back_to_menu(update, context, param=None):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
    query = update.callback_query
    query.answer()
    query.edit_message_text(
        text="üì¶ –ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?",
        reply_markup=build_keyboard('main_menu', menu_constants.MAIN_MENU)
    )


def handle_agreement(update, context, param=None):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è."""
    query = update.callback_query
    query.answer()

    if param == '0':
        query.edit_message_text(
            text="–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ —Å–æ–≥–ª–∞—Å–∏–µ! üì¶ –ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?",
            reply_markup=build_keyboard('main_menu', menu_constants.MAIN_MENU)
        )
    else:
        query.edit_message_text(
            text="–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ä–æ—Å—Å–∏–π—Å–∫–∏–º–∏ –∑–∞–∫–æ–Ω–∞–º–∏, –º—ã –Ω–µ –º–æ–∂–µ–º –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Ä–∞–±–æ—Ç—É –±–µ–∑ –í–∞—à–µ–≥–æ —Å–æ–≥–ª–∞—Å–∏—è. –ï—Å–ª–∏ –í—ã –ø–µ—Ä–µ–¥—É–º–∞–ª–∏, –Ω–∞–∂–º–∏—Ç–µ /start."
        )


def handle_main_menu(update, context, param=None):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é."""
    query = update.callback_query
    query.answer()

    if param == '0':
        handle_start_reservation(update, context)
    elif param == '1':
        handle_storage_rules(update, context)
    elif param == '2':
        handle_show_my_storages(update, context)
    elif param == '3':
        handle_take_my_stuff(update, context)
    elif param == '4':
        handle_legal_services(update, context)
    else:
        query.edit_message_text(
            text="–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?",
            reply_markup=build_keyboard('main_menu', menu_constants.MAIN_MENU)
        )


def handle_start_reservation(update, context):
    """–ù–∞—á–∞–ª–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è - –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∏–º—è"""
    query = update.callback_query
    query.answer()
    context.user_data['user_id'] = update.effective_user.id
    getters.create_or_update_client(user_id=update.effective_user.id)

    query.edit_message_text(
        text="‚úçÔ∏è –ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?"
    )
    context.user_data['current_step'] = 'ask_name'


def handle_ask_name(update, context):
    user_data = context.user_data
    user_name = update.message.text.strip()

    user_data['full_name'] = user_name
    user_id = update.effective_user.id
    getters.create_or_update_client(
        user_id=user_id,
        full_name=user_name
    )


    update.message.reply_text(
        "üè¢ –í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π —Å–∫–ª–∞–¥:",
        reply_markup=build_keyboard('choose_warehouse', getters.get_warehouses())
    )
    context.user_data['current_step'] = 'choose_warehouse'


def handle_choose_warehouse(update, context, param=None):
    query = update.callback_query
    query.answer()

    context.user_data['warehouse'] = getters.get_warehouses()[int(param)][0]

    query.edit_message_text(
        text='–í–∞–º –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π –≤–µ—â–µ–π –¥–æ —Å–∫–ª–∞–¥–∞?',
        reply_markup=build_keyboard('delivery_type', menu_constants.DELIVERY_TYPE)
    )

    context.user_data['current_step'] = 'delivery_type'


def handle_delivery_type(update, context, param=None):
    query = update.callback_query
    query.answer()

    context.user_data['delivery_type'] = menu_constants.DELIVERY_TYPE[int(param)]
    context.user_data['using_courier'] = False

    if param == '0':
        query.edit_message_text(
            text="–° –∫–∞–∫–æ–π –¥–∞—Ç—ã –≤—ã –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∞—Ä–µ–Ω–¥—É?",
            # TODO –¥–∞—Ç—ã –Ω–∞ –±–ª–∏–∂–∞–π—à—É—é –Ω–µ–¥–µ–ª—é –∏–∑ –±–¥ reply_markup=...
        )

        context.user_data['current_step'] = 'specify_rental_start_date'
    else:
        query.edit_message_text(
            text="üè† –£–∫–∞–∂–∏—Ç–µ –∞–¥—Ä–µ—Å, –æ—Ç–∫—É–¥–∞ –∑–∞–±—Ä–∞—Ç—å –≤–µ—â–∏:",
            reply_markup=back_to_menu()
        )

        context.user_data['current_step'] = 'specify_address'


def handle_specify_address(update, context, param=None):
    user_data = context.user_data
    user_address = update.message.text.strip()

    user_data['address'] = user_address
    user_data['using_courier'] = True

    getters.create_or_update_client(
        user_id=context.user_data['user_id'],
        address=user_address
    )

    update.message.reply_text(
        f"üìû –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å–≤—è–∑–∏ —Å –∫—É—Ä—å–µ—Ä–æ–º:",
        reply_markup=back_to_menu()
    )

    user_data['current_step'] = 'specify_phone_number'


def handle_specify_phone_number(update, context, param=None):
    user_data = context.user_data
    user_phone_number = update.message.text.strip()

    user_data['phone_number'] = user_phone_number

    getters.create_or_update_client(
        user_id=context.user_data['user_id'],
        phone_number=user_phone_number
    )

    update.message.reply_text(
        f"üìÖ –ö–æ–≥–¥–∞ —É–¥–æ–±–Ω–æ –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å –¥–æ—Å—Ç–∞–≤—â–∏–∫–∞?",
        # TODO –¥–∞—Ç—ã –Ω–∞ –±–ª–∏–∂–∞–π—à—É—é –Ω–µ–¥–µ–ª—é –∏–∑ –±–¥ reply_markup=...
    )

    user_data['current_step'] = 'specify_rental_start_date'


def handle_specify_rental_start_date(update, context, param=None):
    user_data = context.user_data
    query = update.callback_query
    query.answer()

    # TODO –ø–æ–¥—Ç—è–≥–∏–≤–∞–µ–º –¥–∞—Ç—É –∏–∑ –ë–î, –∑–∞–Ω–æ—Å–∏–º –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç context.user_data['rental_start_date'] = ...

    if user_data['is_legal']:
        user_data['is_legal'] = False
        query.edit_message_text(
            text="–°–∫–æ–ª—å–∫–æ —Å—Ç–µ–ª–ª–∞–∂–µ–π –≤–∞–º –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è?",
            reply_markup=build_keyboard('cell_size', menu_constants.RACKS)  # TODO –≤—ã—Ç–∞—â–∏—Ç—å –∏–∑ –±–¥
        )

    else:
        query.edit_message_text(
            text="–ö–∞–∫–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ —è—á–µ–π–∫–∞ –≤–∞–º –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è?",
            reply_markup=build_keyboard('cell_size', menu_constants.CELLS) # TODO –≤—ã—Ç–∞—â–∏—Ç—å –∏–∑ –±–¥
        )

    context.user_data['current_step'] = 'cell_size'


def handle_cell_size(update, context, param=None):
    query = update.callback_query
    query.answer()

    context.user_data['cell_size'] = menu_constants.CELLS[int(param)][0]

    query.edit_message_text(
        text="–ö–∞–∫–æ–π —Å—Ä–æ–∫ —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?",
        reply_markup=build_keyboard('period_of_storage', menu_constants.STORAGE_PERIODS)
    )

    context.user_data['current_step'] = 'period_of_storage'


def handle_period_of_storage(update, context, param=None):
    query = update.callback_query
    query.answer()


    # TODO —Å–¥–µ–ª–∞—Ç—å –Ω–æ—Ä–º–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é —Ä–∞—Å—á–µ—Ç–∞ –¥–∞—Ç—ã
    context.user_data['period_of_storage'] = (
            context.user_data['rental_start_date'] - menu_constants.STORAGE_PERIODS[int(param)]
    )

    # TODO –≤–Ω–µ—Å—Ç–∏ –≤—Å–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    if context.user_data['using_courier']:
        query.edit_message_text(
            text=(
                "üßæ –ü–æ—á—Ç–∏ –≤—Å–µ –≥–æ—Ç–æ–≤–æ! –í–æ—Ç —á—Ç–æ –≤—ã –≤—ã–±—Ä–∞–ª–∏:\n"
                f"–ò–º—è: {}\n"
                f"–°–∫–ª–∞–¥: {}\n"
                f"–ê–¥—Ä–µ—Å –∑–∞–±–æ—Ä–∞: {}\n"
                f"–¢–µ–ª–µ—Ñ–æ–Ω: {}\n"
                f"–†–∞–∑–º–µ—Ä: {}\n"
                f"–°—Ä–æ–∫ —Ö—Ä–∞–Ω–µ–Ω–∏—è: {}\n\n"
                f"–°—Ç–æ–∏–º–æ—Å—Ç—å —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ –≤–∞—à–µ–º—É –∑–∞–∫–∞–∑—É —Å–æ—Å—Ç–∞–≤–∏—Ç {...} —Ä—É–±–ª–µ–π. –ü—Ä–µ–∂–¥–µ —á–µ–º –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞,"
                f" –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ [–°–°–´–õ–ö–ê –ù–ê PDF] —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ —Å–ø–∏—Å–∫–æ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –∏ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö –≤–µ—â–µ–π,"
                f" –∞ —Ç–∞–∫–∂–µ —Å –ø–æ–ª–∏—Ç–∏–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö [–°–°–´–õ–ö–ê –ù–ê PDF]."
        ), reply_markup=build_keyboard('show_storage_info', menu_constants.AGREEMENT_TO_ORDER)
        )

        context.user_data['current_step'] = 'show_storage_info'
    else:
        query.edit_message_text(
            text=(
                "üßæ –ü–æ—á—Ç–∏ –≤—Å–µ –≥–æ—Ç–æ–≤–æ! –í–æ—Ç —á—Ç–æ –≤—ã –≤—ã–±—Ä–∞–ª–∏:\n"
                f"–ò–º—è: {}\n"
                f"–°–∫–ª–∞–¥: {}\n"
                f"–†–∞–∑–º–µ—Ä: {}\n"
                f"–°—Ä–æ–∫ —Ö—Ä–∞–Ω–µ–Ω–∏—è: {}\n\n"
                f"–°—Ç–æ–∏–º–æ—Å—Ç—å —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ –≤–∞—à–µ–º—É –∑–∞–∫–∞–∑—É —Å–æ—Å—Ç–∞–≤–∏—Ç {...} —Ä—É–±–ª–µ–π. –ü—Ä–µ–∂–¥–µ —á–µ–º –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞,"
                f" –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ [–°–°–´–õ–ö–ê –ù–ê PDF] —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ —Å–ø–∏—Å–∫–æ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –∏ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö –≤–µ—â–µ–π,"
                f" –∞ —Ç–∞–∫–∂–µ —Å –ø–æ–ª–∏—Ç–∏–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö [–°–°–´–õ–ö–ê –ù–ê PDF]."
            ), reply_markup=build_keyboard('show_storage_info', menu_constants.AGREEMENT_TO_ORDER)
        )

        context.user_data['current_step'] = 'show_storage_info'


def handle_show_storage_info(update, context, param=None):
    query = update.callback_query
    query.answer()

    if param == '0':
        query.edit_message_text(
            text='–í–∞—à –∑–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!',
            reply_markup=back_to_menu()
        )
    else:
        query.edit_message_text(
            text='–í–∞—à –∑–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω!',
            reply_markup=back_to_menu()
        )


def handle_storage_rules(update, context):
    query = update.callback_query
    query.answer()
    query.edit_message_text(text=menu_constants.STORAGE_RULES, reply_markup=back_to_menu())


def handle_show_my_storages(update, context):
    query = update.callback_query
    query.answer()
    user_id = update.effective_user.id
    query.edit_message_text(
        text=getters.get_my_storages(user_id=user_id),
        reply_markup=back_to_menu()
    )

    # TODO –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –æ—Ç–≤–µ—Ç–∞


def handle_take_my_stuff(update, context):
    query = update.callback_query
    query.answer()

    query.delete_message()

    context.bot.send_photo(
        chat_id=update.effective_chat.id,
        photo="https://api.qrserver.com/v1/create-qr-code/?size=250x250&data=SelfStorageAccess",
        caption=(
            "üì≤ –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–±—Ä–∞—Ç—å —Å–≤–æ–∏ –≤–µ—â–∏, –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–≤ —ç—Ç–æ—Ç QR-–∫–æ–¥ –Ω–∞ –Ω–∞—à–µ–º —Å–∫–ª–∞–¥–µ.\n\n"
            "–≠—Ç–æ—Ç QR-–∫–æ–¥ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏ –≤ –±—É–¥—É—â–µ–º ‚Äî —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å –≤–µ—â–∏ –≤ —è—á–µ–π–∫—É "
            "–∏–ª–∏ –≤–∑—è—Ç—å —á—Ç–æ-—Ç–æ –Ω—É–∂–Ω–æ–µ —Å–Ω–æ–≤–∞!"
        ),
        reply_markup=back_to_menu()
    )


def handle_legal_services(update, context):
    query = update.callback_query
    query.answer()
    keyboard = [
        [
            InlineKeyboardButton("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", callback_data="continue_legal_service"),
            InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="to_menu")
        ]
    ]
    query.edit_message_text(
        text=(
            "üì¶ SelfStorage –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —É—Å–ª—É–≥–∏ –ø–æ —Ö—Ä–∞–Ω–µ–Ω–∏—é –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –ª–∏—Ü.\n"
            "–°—Ç–æ–∏–º–æ—Å—Ç—å –∞—Ä–µ–Ω–¥—ã –æ–¥–Ω–æ–≥–æ —Å—Ç–µ–ª–ª–∞–∂–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 899 —Ä—É–±–ª–µ–π –≤ –º–µ—Å—è—Ü.\n"
            "–í—ã –±—ã —Ö–æ—Ç–µ–ª–∏ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —ç—Ç—É —É—Å–ª—É–≥—É?"
        ),
        reply_markup=InlineKeyboardMarkup(keyboard)
    )


def handle_continue_legal_services(update, context, param=None):
    query = update.callback_query
    query.answer()

    query = update.callback_query
    query.answer()
    query.edit_message_text(
        text="‚úçÔ∏è –ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?"
    )
    context.user_data['current_step'] = 'ask_name'

    user_data = context.user_data
    user_data['is_legal'] = True

    # TODO: —Å–æ–∑–¥–∞—Ç—å –∏ –ø—Ä–æ—Ä–∞–±–æ—Ç–∞—Ç—å —Å—Ü–µ–Ω–∞—Ä–∏–π –¥–ª—è —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –ª–∏—Ü


# TODO –ø–æ–¥—Ç—è–Ω—É—Ç—å –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ–µ –∏–∑ –ë–î