from telegram import InlineKeyboardMarkup, InlineKeyboardButton

import menu_constants


def build_keyboard(action_type, button_rows):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–∏–ø –¥–µ–π—Å—Ç–≤–∏—è (–¥–ª—è callback_data) –∏ —Å–ø–∏—Å–æ–∫ —Å–ø–∏—Å–∫–æ–≤ —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –∫–Ω–æ–ø–æ–∫."""
    keyboard = [
        [InlineKeyboardButton(text=button_label, callback_data=f"{action_type}_{row_index}")]
        for row_index, [button_label] in enumerate(button_rows)
    ]
    return InlineKeyboardMarkup(keyboard)


def back_to_menu():
    """–°–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
    keyboard = [[InlineKeyboardButton(text='‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='to_menu')]]
    return InlineKeyboardMarkup(keyboard)


def handle_back_to_menu(update, context, param=None):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
    query = update.callback_query
    query.answer()
    query.edit_message_text(
        text="üì¶ –ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?",
        reply_markup=build_keyboard('main_menu', menu_constants.MAIN_MENU)
    )


def handle_agreement(update, context, param=None):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è."""
    query = update.callback_query
    query.answer()

    if param == '0':
        query.edit_message_text(
            text="–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ —Å–æ–≥–ª–∞—Å–∏–µ! üì¶ –ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?",
            reply_markup=build_keyboard('main_menu', menu_constants.MAIN_MENU)
        )
    else:
        query.edit_message_text(
            text="–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ä–æ—Å—Å–∏–π—Å–∫–∏–º–∏ –∑–∞–∫–æ–Ω–∞–º–∏, –º—ã –Ω–µ –º–æ–∂–µ–º –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Ä–∞–±–æ—Ç—É –±–µ–∑ –í–∞—à–µ–≥–æ —Å–æ–≥–ª–∞—Å–∏—è. –ï—Å–ª–∏ –í—ã –ø–µ—Ä–µ–¥—É–º–∞–ª–∏, –Ω–∞–∂–º–∏—Ç–µ /start."
        )


def handle_main_menu(update, context, param=None):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é."""
    query = update.callback_query
    query.answer()

    if param == '0':
        handle_start_reservation(update, context)
    elif param == '1':
        handle_storage_rules(update, context)
    elif param == '2':
        handle_show_my_storages(update, context)
    elif param == '3':
        handle_take_my_stuff(update, context)
    else:
        query.edit_message_text(
            text="–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?",
            reply_markup=build_keyboard('main_menu', menu_constants.MAIN_MENU)
        )

# –Ω–∏–∂–µ –ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∏
def handle_start_reservation(update, context):
    query = update.callback_query
    query.answer()
    query.edit_message_text(
        text="‚úçÔ∏è –ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç? (–ó–¥–µ—Å—å –±—É–¥–µ—Ç —Å—Ü–µ–Ω–∞—Ä–∏–π –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —è—á–µ–π–∫–∏)",
        reply_markup=back_to_menu()
    )


def handle_storage_rules(update, context):
    query = update.callback_query
    query.answer()
    query.edit_message_text(
        text="–ó–¥–µ—Å—å –±—É–¥—É—Ç –ø—Ä–∞–≤–∏–ª–∞ —Ö—Ä–∞–Ω–µ–Ω–∏—è",
        reply_markup=back_to_menu()
    )


def handle_show_my_storages(update, context):
    query = update.callback_query
    query.answer()
    query.edit_message_text(
        text="–ó–¥–µ—Å—å –±—É–¥—É—Ç –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —è—á–µ–π–∫–∏",
        reply_markup=back_to_menu()
    )


def handle_take_my_stuff(update, context):
    query = update.callback_query
    query.answer()
    query.edit_message_text(
        text="–ó–¥–µ—Å—å –±—É–¥–µ—Ç QR-–∫–æ–¥ –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —è—á–µ–π–∫–∏",
        reply_markup=back_to_menu()
    )